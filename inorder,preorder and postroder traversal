#include<stdio.h>
#include<stdlib.h>
struct node
{
int data;
struct node*left;
struct node*right;
};
struct node*createnode(int data)
{
struct node*node=(struct node*)malloc(sizeof(struct node));
node->data=data;
node->left=NULL;
node->right=NULL;
}
void preorder(struct node*root) //preorder traversal root,leftsubtree,right subtree
{
if(root==NULL)
return;
printf("%d",root->data);
preorder(root->left);
preorder(root->right);
}
void inorder(struct node*root) //leftsubree,root,right subtree
{
if(root==NULL)
return;
inorder(root->left);
printf("%d",root->data);
inorder(root->right);
}
void postorder(struct node*root)
{
if(root==NULL)
return;
postorder(root->left);
postorder(root->right);
printf("%d",root->data);
}

int main()
{
struct node*root=createnode(1);
root->left=createnode(2);
root->right=createnode(3);
root->left->left=createnode(4);
root->left->right=createnode(5);
printf("printing preorder..");
preorder(root);
printf("\n");
printf("printing inorder..");
inorder(root);
printf("\n");
printf("printing postorder..");
postorder(root);
return 0;
}
